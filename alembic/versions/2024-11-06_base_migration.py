"""base_migration

Revision ID: 70137b1b9b60
Revises: 
Create Date: 2024-11-06 16:50:32.244984

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '70137b1b9b60'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('latitude', sa.DECIMAL(precision=10, scale=7), nullable=True),
    sa.Column('longitude', sa.DECIMAL(precision=10, scale=7), nullable=True),
    sa.Column('country', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('street', sa.String(length=255), nullable=True),
    sa.Column('house', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_addresses_city'), 'addresses', ['city'], unique=False)
    op.create_index(op.f('ix_addresses_country'), 'addresses', ['country'], unique=False)
    op.create_index(op.f('ix_addresses_house'), 'addresses', ['house'], unique=False)
    op.create_index(op.f('ix_addresses_street'), 'addresses', ['street'], unique=False)
    op.create_table('beer_colors',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('srm', sa.DECIMAL(precision=4, scale=2), nullable=True),
    sa.Column('ebc', sa.DECIMAL(precision=4, scale=2), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('levels',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level_name', sa.String(length=45), nullable=False),
    sa.Column('icon', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_levels_id'), 'levels', ['id'], unique=False)
    op.create_table('test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_id'), 'test', ['id'], unique=False)
    op.create_index(op.f('ix_test_title'), 'test', ['title'], unique=False)
    op.create_table('type_of_beers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=45), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_type_of_beers_name'), 'type_of_beers', ['name'], unique=False)
    op.create_table('type_of_places',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('beers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=45), nullable=False),
    sa.Column('brand', sa.String(length=45), nullable=False),
    sa.Column('description', sa.String(length=250), nullable=True),
    sa.Column('photo', sa.String(length=100), nullable=True),
    sa.Column('alc_degree', sa.DECIMAL(precision=2, scale=2), nullable=False),
    sa.Column('ibu', sa.Integer(), nullable=True),
    sa.Column('og', sa.DECIMAL(precision=5, scale=3), nullable=True),
    sa.Column('fg', sa.DECIMAL(precision=5, scale=3), nullable=True),
    sa.Column('barrel_aged', sa.Boolean(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('color_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['color_id'], ['beer_colors.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['type_of_beers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('places',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('type_place_id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['type_place_id'], ['type_of_places.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_places_address_id'), 'places', ['address_id'], unique=False)
    op.create_index(op.f('ix_places_type_place_id'), 'places', ['type_place_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('register_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['level_id'], ['levels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('auth_codes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auth_codes_id'), 'auth_codes', ['id'], unique=False)
    op.create_table('beers_places',
    sa.Column('place_id', sa.Integer(), nullable=False),
    sa.Column('beer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['beer_id'], ['beers.id'], ),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('place_id', 'beer_id')
    )
    op.create_table('user_friends',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('friend_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'friend_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_friends')
    op.drop_table('beers_places')
    op.drop_index(op.f('ix_auth_codes_id'), table_name='auth_codes')
    op.drop_table('auth_codes')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_places_type_place_id'), table_name='places')
    op.drop_index(op.f('ix_places_address_id'), table_name='places')
    op.drop_table('places')
    op.drop_table('beers')
    op.drop_table('type_of_places')
    op.drop_index(op.f('ix_type_of_beers_name'), table_name='type_of_beers')
    op.drop_table('type_of_beers')
    op.drop_index(op.f('ix_test_title'), table_name='test')
    op.drop_index(op.f('ix_test_id'), table_name='test')
    op.drop_table('test')
    op.drop_index(op.f('ix_levels_id'), table_name='levels')
    op.drop_table('levels')
    op.drop_table('beer_colors')
    op.drop_index(op.f('ix_addresses_street'), table_name='addresses')
    op.drop_index(op.f('ix_addresses_house'), table_name='addresses')
    op.drop_index(op.f('ix_addresses_country'), table_name='addresses')
    op.drop_index(op.f('ix_addresses_city'), table_name='addresses')
    op.drop_table('addresses')
    # ### end Alembic commands ###
